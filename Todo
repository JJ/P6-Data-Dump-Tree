

object size

ColorStr class
	keeps color and string separated, or colored string and length of uncolored string

eqv not implemented for Match

#2 colums display of dumps
	given two dumps, handle colors, etc ... and show both side by side


#why can't pass role (does =>) with argument

#Allow filter to add text to the rendering of an element

#display a[0..1| as a[0]

#Only container containers can have names
	give names to all possible elements or example a filter that can add names/hilight

#user defined address name
	is some nodes are of specific importance, give them name that can be used to 
	display the reference rather than a standard @1234, eg, @important_node

#color objects

#scoped filters

#paths
	can be used in filters
	
#diff list
	can use paths

#test::compare:DDT::diff

#roles to sub dump

#filters on generic containers
!scoped filter and roles
	=> path and depth are enough for now

Requirements:

user interaction layer
	!cache
		to avoid re-generating the data
	
	representation in
		Prima, curses, gtk, dhtml, #terminal


dumper
	#options
		#max depth, ...

	name
		allow dumper to be switched on and off by name at higher level
		eg: a piece of code contains a dumper but the user wants to control
			in which scope the dump should be done		

	#handles multiple iterators
		synchronized glyphs (diff)

	#returns one or multiple "row representations"
		multiple rows have synchronization points

	#start and end tag per level
		ease generation of HTML for example

	#user defined filters

	#dumps can be gathered from multiple source dynamically
		when getting to a specific point, data is gathered from another source
		no need to create a data structure in advance
	
		=> any object can declare handler, including dynamic sources

	dump, gather, dump_gathered, reset interface.

	dumper can re-synchronize the glyphs
		if a stream ends, the glyph for the previous element
		may need to be changed	

	supports threads

	lazy row representation element generation

	can modify a previous glyph if the level after it is not the expected one
		ie, an element becomes the latest in the level

	#when dumping multiple structures simultaneously
		diff color
		diff column
		diff glyphs

#row representation
	can contain multiple fields for each data element dumped
		level, #data, #type, #inheritance, size, taint, tie, weak references, ...
	
	#user registrable representation generators
	class defined generator
		it can use this module and the glyphs get aligned properly

	colorizer
		per level
		per type

	lazy representation generation

	},

#data iterator
	from data structure
	from feeder
		ie data can come from a stream


#glyph generator
	option for different glyph representations

	generate a glyph based on a hierarchical level
		method, input level, input glyphs, output a string


